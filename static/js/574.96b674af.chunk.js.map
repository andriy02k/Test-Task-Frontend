{"version":3,"file":"static/js/574.96b674af.chunk.js","mappings":"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","sources":["api/api.js","webpack://test-task-frontend/./src/components/Modal.module.css?c423","components/Modal.jsx","components/EditChatModal.jsx","api/chatApi.js","components/ChatList.jsx","components/Filter.jsx","components/Aside.jsx","components/Layout.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost:8080/api/chats\",\r\n});\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"Modal_form_container__wNgOz\",\"title\":\"Modal_title__FIU3k\",\"desc\":\"Modal_desc__CHCCF\",\"form\":\"Modal_form__JfgAr\",\"input\":\"Modal_input__OExkN\",\"button\":\"Modal_button__FF4qH\"};","import React, { useEffect, useCallback } from \"react\";\r\nimport css from \"./Modal.module.css\";\r\n\r\nconst Modal = ({ children, onClose, showModal }) => {\r\n  const handlerClick = useCallback(\r\n    (e) => {\r\n      if (e.code === \"Escape\") onClose();\r\n      if (e.currentTarget === e.target) onClose();\r\n    },\r\n    [onClose]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handlerClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handlerClick);\r\n    };\r\n  }, [handlerClick]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        showModal ? css.backdrop + \" \" + css.backdropActive : css.backdrop\r\n      }\r\n      onClick={handlerClick}\r\n    >\r\n      <div\r\n        className={\r\n          showModal\r\n            ? css.modalContent + \" \" + css.modalContentActive\r\n            : css.modalContent\r\n        }\r\n      >\r\n        <button className={css.button} onClick={() => onClose()}></button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { updateChat } from \"../api/chatApi\";\r\n\r\nconst EditChatModal = ({ chatId, onClose }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await updateChat(chatId, { firstName, lastName });\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={firstName}\r\n        onChange={(e) => setFirstName(e.target.value)}\r\n        placeholder=\"First Name\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={lastName}\r\n        onChange={(e) => setLastName(e.target.value)}\r\n        placeholder=\"Last Name\"\r\n      />\r\n      <button type=\"submit\">Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditChatModal;\r\n","import { api } from \"./api\";\r\n\r\nexport const getChats = async () => {\r\n  const { data } = await api.get(`/`);\r\n  return data;\r\n};\r\n\r\nexport const createChat = async (userData) => {\r\n  const { data } = await api.post(`/`, userData);\r\n  return data;\r\n};\r\n\r\nexport const updateChat = async (id, newData) => {\r\n  const { data } = await api.put(`/${id}`, newData);\r\n  return data;\r\n};\r\n\r\nexport const deleteChat = async (id) => {\r\n  const { data } = await api.delete(`/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const sendMessage = async (id, message) => {\r\n  const { data } = await api.post(`/${id}/messages`, message);\r\n  return data;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, deleteChat } from \"../api/chatApi.js\";\r\nimport Modal from \"./Modal.jsx\";\r\nimport EditChatModal from \"./EditChatModal.jsx\";\r\n\r\nconst ChatList = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedChatId, setSelectedChatId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      try {\r\n        const chatData = await getChats();\r\n        setChats(chatData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  const removeContact = async (id) => {\r\n    try {\r\n      await deleteChat(id);\r\n      setRefresh(!refresh);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (chatId) => {\r\n    setSelectedChatId(chatId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedChatId(null);\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  const filterChats = () => {\r\n    return chats.filter(\r\n      (chat) =>\r\n        chat.firstName.toLowerCase().includes(filter.toLowerCase()) ||\r\n        chat.lastName.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const filteredChats = filterChats();\r\n\r\n  const handleChatClick = (chatId) => {\r\n    console.log(chatId);\r\n    navigate(`/chat/${chatId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n      <ul>\r\n        {filteredChats.map((chat) => (\r\n          <li key={chat._id} onClick={() => handleChatClick(chat._id)}>\r\n            {chat.firstName} {chat.lastName}\r\n            {/* <div>{chat.messages[chat.messages.length - 1].text}</div> */}\r\n            <button onClick={() => handleEditClick(chat._id)}>Edit</button>\r\n            <button onClick={() => removeContact(chat._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n        {showModal && (\r\n          <Modal onClose={closeModal} showModal={showModal}>\r\n            <EditChatModal chatId={selectedChatId} onClose={closeModal} />\r\n          </Modal>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import React from \"react\";\r\n\r\nconst Filter = () => {\r\n  return <div>filter</div>;\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport ChatList from \"../components/ChatList\";\r\nimport Filter from \"../components/Filter\";\r\n\r\nconst Aside = () => {\r\n  return (\r\n    <>\r\n      <Filter />\r\n      <ChatList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Aside;\r\n","import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport Aside from \"./Aside\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Aside />\r\n      <div>\r\n        <Outlet />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["api","axios","create","baseURL","_ref","children","onClose","showModal","handlerClick","useCallback","e","code","currentTarget","target","useEffect","document","addEventListener","removeEventListener","_jsx","className","css","backdrop","backdropActive","onClick","_jsxs","modalContent","modalContentActive","button","chatId","firstName","setFirstName","useState","lastName","setLastName","onSubmit","async","event","preventDefault","id","newData","data","put","updateChat","error","console","type","value","onChange","placeholder","ChatList","chats","setChats","filter","setFilter","refresh","setRefresh","setShowModal","selectedChatId","setSelectedChatId","navigate","useNavigate","chatData","get","getChats","fetchChats","removeContact","delete","deleteChat","closeModal","filteredChats","chat","toLowerCase","includes","_Fragment","map","handleChatClick","_id","log","handleEditClick","Modal","EditChatModal","Filter","Aside","Layout","Outlet"],"sourceRoot":""}