{"version":3,"file":"static/js/166.a4dd2898.chunk.js","mappings":"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","sources":["api/api.js","api/chatApi.js","webpack://test-task-frontend/./src/components/Chat/Chat.module.css?f66a","components/Chat/Chat.jsx","images/icons.svg","components/Icons/Icons.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost:8080/api/chats\",\r\n});\r\n","import { api } from \"./api\";\r\n\r\nexport const getChats = async () => {\r\n  const { data } = await api.get(`/`);\r\n  return data;\r\n};\r\n\r\nexport const getChatById = async (id) => {\r\n  const { data } = await api.get(`/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const createChat = async (userData) => {\r\n  const { data } = await api.post(`/`, userData);\r\n  return data;\r\n};\r\n\r\nexport const updateChat = async (id, newData) => {\r\n  const { data } = await api.put(`/${id}`, newData);\r\n  return data;\r\n};\r\n\r\nexport const deleteChat = async (id) => {\r\n  const { data } = await api.delete(`/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const sendMessage = async (id, message) => {\r\n  const { data } = await api.post(`/${id}/messages`, message);\r\n  return data;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Chat_container__f4wjQ\",\"name\":\"Chat_name__BA5pz\",\"autoMessage\":\"Chat_autoMessage__7GiJC\",\"myMessage\":\"Chat_myMessage__cRBVR\",\"text\":\"Chat_text__flF1c\",\"date\":\"Chat_date__nOZQq\",\"inputCon\":\"Chat_inputCon__7TQ8K\",\"input\":\"Chat_input__RBxCg\",\"button\":\"Chat_button__GHBGS\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getChatById, sendMessage } from \"../../api/chatApi\";\r\nimport css from \"./Chat.module.css\";\r\nimport userImage from \"../../images/user.png\";\r\nimport { Svg } from \"../Icons/Icons\";\r\n\r\nconst Chat = () => {\r\n  const { id } = useParams();\r\n  const [chat, setChat] = useState(null);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchChat = async () => {\r\n      try {\r\n        const chatData = await getChatById(id);\r\n        setChat(chatData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchChat();\r\n    const interval = setInterval(fetchChat, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [id]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage) return;\r\n\r\n    try {\r\n      await sendMessage(id, {\r\n        text: newMessage,\r\n        sender: `${chat.firstName} ${chat.lastName}`,\r\n      });\r\n\r\n      setNewMessage(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getDate = (curentDate) => {\r\n    const date = new Date(curentDate);\r\n\r\n    const formattedDate = `${date.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    })} ${date.toLocaleTimeString(\"en-US\", {\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n      hour12: true,\r\n    })}`;\r\n\r\n    return formattedDate;\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  if (!chat) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <>\r\n      <div className={css.container}>\r\n        <img\r\n          className={css.img}\r\n          src={userImage}\r\n          alt=\"user\"\r\n          width={32}\r\n          height={32}\r\n        />\r\n        <h1 className={css.name}>\r\n          {chat.firstName} {chat.lastName}\r\n        </h1>\r\n      </div>\r\n      {chat.messages && chat.messages.length > 0 ? (\r\n        chat.messages.map(({ _id, text, createdAt, sender }) => (\r\n          <div\r\n            key={_id}\r\n            className={\r\n              sender === \"Auto-response\" ? css.autoMessage : css.myMessage\r\n            }\r\n          >\r\n            <p className={css.text}>{text}</p>\r\n            <p className={css.date}>{getDate(createdAt)}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Start chat</p>\r\n      )}\r\n      <div className={css.inputCon}>\r\n        <input\r\n          className={css.input}\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Type your message\"\r\n        />\r\n        <button className={css.button} onClick={handleSendMessage}>\r\n          <Svg id={\"#icon-rocket\"} width={12} height={12} />\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","var _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-rocket\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 2l-10 10h-6l-6 8c0 0 6.357-1.77 10.065-0.94l-10.065 12.94 13.184-10.255c1.839 4.208-1.184 10.255-1.184 10.255l8-6v-6l10-10 2-10-10 2z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-bin2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 32h20l2-22h-24zM20 4v-4h-8v4h-10v6l2-2h24l2 2v-6h-10zM18 4h-4v-2h4v2z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.e0d4449320af6be040b2c066d6e82502.svg\";\nexport { ForwardRef as ReactComponent };","import Icons from \"../../images/icons.svg\";\r\n\r\nexport const Svg = ({ id, width, height }) => {\r\n  return (\r\n    <svg width={width} height={height}>\r\n      <use href={Icons + id}></use>\r\n    </svg>\r\n  );\r\n};\r\n"],"names":["api","axios","create","baseURL","getChats","async","data","get","getChatById","id","createChat","post","userData","updateChat","newData","put","deleteChat","delete","sendMessage","message","Chat","useParams","chat","setChat","useState","newMessage","setNewMessage","useEffect","fetchChat","chatData","error","console","interval","setInterval","clearInterval","getDate","curentDate","date","Date","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","hour12","_jsxs","_Fragment","children","className","css","container","_jsx","img","src","userImage","alt","width","height","name","firstName","lastName","messages","length","map","_ref","_id","text","createdAt","sender","autoMessage","myMessage","inputCon","input","type","value","onChange","event","target","placeholder","button","onClick","Svg","href","Icons"],"sourceRoot":""}