{"version":3,"file":"static/js/547.df9046d4.chunk.js","mappings":"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","sources":["api/api.js","api/chatApi.js","webpack://test-task-frontend/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/EditChatModal/EditChatModal.jsx","components/ChatList/ChatList.jsx","components/Layout/Layout.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost:8080/api/chats\",\r\n});\r\n","import { api } from \"./api\";\r\n\r\nexport const getChats = async () => {\r\n  const { data } = await api.get(`/`);\r\n  return data;\r\n};\r\n\r\nexport const getChatById = async (id) => {\r\n  const { data } = await api.get(`/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const createChat = async (userData) => {\r\n  const { data } = await api.post(`/`, userData);\r\n  return data;\r\n};\r\n\r\nexport const updateChat = async (id, newData) => {\r\n  const { data } = await api.put(`/${id}`, newData);\r\n  return data;\r\n};\r\n\r\nexport const deleteChat = async (id) => {\r\n  const { data } = await api.delete(`/${id}`);\r\n  return data;\r\n};\r\n\r\nexport const sendMessage = async (id, message) => {\r\n  const { data } = await api.post(`/${id}/messages`, message);\r\n  return data;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"Modal_form_container__h7IDp\",\"title\":\"Modal_title__gGugG\",\"desc\":\"Modal_desc__5dSU3\",\"form\":\"Modal_form__Cg5Yo\",\"input\":\"Modal_input__ApvCG\",\"button\":\"Modal_button__Npo+Q\"};","import React, { useEffect, useCallback } from \"react\";\r\nimport css from \"./Modal.module.css\";\r\n\r\nconst Modal = ({ children, onClose, showModal, addModal }) => {\r\n  const handlerClick = useCallback(\r\n    (e) => {\r\n      if (e.code === \"Escape\") onClose();\r\n      if (e.currentTarget === e.target) onClose();\r\n    },\r\n    [onClose]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handlerClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handlerClick);\r\n    };\r\n  }, [handlerClick]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        showModal || addModal\r\n          ? css.backdrop + \" \" + css.backdropActive\r\n          : css.backdrop\r\n      }\r\n      onClick={handlerClick}\r\n    >\r\n      <div\r\n        className={\r\n          showModal || addModal\r\n            ? css.modalContent + \" \" + css.modalContentActive\r\n            : css.modalContent\r\n        }\r\n      >\r\n        <button className={css.button} onClick={() => onClose()}></button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { updateChat } from \"../../api/chatApi\";\r\n\r\nconst EditChatModal = ({ chatId }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await updateChat(chatId, { firstName, lastName });\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={firstName}\r\n        onChange={(e) => setFirstName(e.target.value)}\r\n        placeholder=\"First Name\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        value={lastName}\r\n        onChange={(e) => setLastName(e.target.value)}\r\n        placeholder=\"Last Name\"\r\n      />\r\n      <button type=\"submit\">Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditChatModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getChats, deleteChat } from \"../../api/chatApi.js\";\r\nimport Modal from \"../Modal/Modal.jsx\";\r\nimport EditChatModal from \"../EditChatModal/EditChatModal.jsx\";\r\n\r\nconst ChatList = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedChatId, setSelectedChatId] = useState(null);\r\n  const [addModal, setAddModal] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchChats = async () => {\r\n      try {\r\n        const chatData = await getChats();\r\n        setChats(chatData);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n  const removeContact = async (id) => {\r\n    try {\r\n      await deleteChat(id);\r\n      setRefresh(!refresh);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (chatId) => {\r\n    setSelectedChatId(chatId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setAddModal(false);\r\n    setSelectedChatId(null);\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  const filterChats = () => {\r\n    return chats.filter(\r\n      (chat) =>\r\n        chat.firstName.toLowerCase().includes(filter.toLowerCase()) ||\r\n        chat.lastName.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const filteredChats = filterChats();\r\n\r\n  const getLastMessage = (messages) => {\r\n    if (!messages || messages.length === 0) return \" \";\r\n    return messages[messages.length - 1];\r\n  };\r\n\r\n  const getDate = (curentDate) => {\r\n    const date = new Date(curentDate);\r\n\r\n    const formattedDate = date.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n\r\n    return formattedDate;\r\n  };\r\n\r\n  const handleChatClick = (chatId) => {\r\n    console.log(chatId);\r\n    navigate(`/chat/${chatId}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n      <button onClick={() => setAddModal(!addModal)}>Create new chat</button>\r\n      {addModal && (\r\n        <Modal onClose={closeModal} addModal={addModal}>\r\n          <EditChatModal />\r\n        </Modal>\r\n      )}\r\n      <ul>\r\n        {filteredChats.map(({ firstName, lastName, _id, messages }) => (\r\n          <li key={_id} onClick={() => handleChatClick(_id)}>\r\n            {firstName} {lastName}\r\n            <p>{getLastMessage(messages).text}</p>\r\n            <p>{getDate(getLastMessage(messages).createdAt)}</p>\r\n            <button onClick={() => handleEditClick(_id)}>Edit</button>\r\n            <button onClick={() => removeContact(_id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n        {showModal && (\r\n          <Modal onClose={closeModal} showModal={showModal}>\r\n            <EditChatModal chatId={selectedChatId} />\r\n          </Modal>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport ChatList from \"../ChatList/ChatList\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <ChatList />\r\n      <div>\r\n        <Outlet />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"],"names":["api","axios","create","baseURL","getChats","async","data","get","getChatById","id","updateChat","newData","put","deleteChat","delete","sendMessage","message","post","_ref","children","onClose","showModal","addModal","handlerClick","useCallback","e","code","currentTarget","target","useEffect","document","addEventListener","removeEventListener","_jsx","className","css","backdrop","backdropActive","onClick","_jsxs","modalContent","modalContentActive","button","chatId","firstName","setFirstName","useState","lastName","setLastName","onSubmit","event","preventDefault","error","console","type","value","onChange","placeholder","ChatList","chats","setChats","filter","setFilter","refresh","setRefresh","setShowModal","selectedChatId","setSelectedChatId","setAddModal","navigate","useNavigate","chatData","fetchChats","closeModal","filteredChats","chat","toLowerCase","includes","getLastMessage","messages","length","_Fragment","Modal","EditChatModal","map","_id","handleChatClick","log","text","curentDate","createdAt","Date","toLocaleDateString","year","month","day","removeContact","Layout","Outlet"],"sourceRoot":""}